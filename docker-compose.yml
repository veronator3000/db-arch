version: '3.8'

services:
  db:
    image: postgres
    container_name: db
    restart: no
    environment:
      POSTGRES_DB: twich
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user", "-d", "twich", "-h", "localhost", "-p", "5432" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  
  migration_script:
    restart: no
    container_name: migrations
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MIGRATION_VERSION: ${MIGRATION_VERSION}
      PASSWORD: ${PASSWORD}
      USER: ${USER}
    env_file:
      - .env
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d/migration
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
        
  fak_app:
    restart: no
    container_name: fak_app
    build:
      context: ./fak
      dockerfile: Dockerfile
    depends_on:
      migration_script:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      FILLING_CNT: ${FILLING_CNT}
  
  
  analyze_app:
    restart: no
    container_name: analyze_app 
  
    build:
      context: ./analyze
      dockerfile: Dockerfile
    volumes:
      - ./result:/docker-entrypoint-initdb.d/result
    depends_on:
       fak_app:
         condition: service_completed_successfully
    env_file:
      - .env
    ports:
      - "8082:8082"


